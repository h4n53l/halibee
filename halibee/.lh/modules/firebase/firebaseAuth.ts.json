{
    "sourceFile": "modules/firebase/firebaseAuth.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 77,
            "patches": [
                {
                    "date": 1630172188850,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1630172213367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,35 @@\n+import { useEffect, useState } from \"react\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+      return () => unsubscribe();\r\n+    }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172281432,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import { useEffect, useState } from \"react\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+  useEffect(() => {\r\n+    const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\r\n+      setUser(firebaseUser);\r\n+    });\r\n+\r\n+    return unsubscribe;\r\n+  }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172296291,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,38 @@\n+import { useEffect, useState } from \"react\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\r\n+        setUser(firebaseUser);\r\n+      });\r\n+  \r\n+      return unsubscribe;\r\n+    }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172313158,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+import { useEffect, useState } from \"react\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+      return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    \r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172328892,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { useEffect, useState } from \"react\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+      return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\r\n+        });\r\n+    \r\n+        return unsubscribe;\r\n+      }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172337841,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { useEffect, useState } from \"react\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+      return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\r\n+        });\r\n+    \r\n+        return unsubscribe;\r\n+      }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172360157,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+      return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged((authStateChanged) => {\r\n+        });\r\n+    \r\n+        return unsubscribe;\r\n+      }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172373961,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+      return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged) => {\r\n+        });\r\n+    \r\n+        return unsubscribe;\r\n+      }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172381115,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+      return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return unsubscribe;\r\n+      }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172398665,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+      return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630172409324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,37 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+    return {\r\n+      authUser,\r\n+      loading\r\n+    };\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173649070,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        Firebase.auth().signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email, password) =>\r\n+        Firebase.auth().createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        Firebase.auth().signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173663144,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        Firebase.auth().signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email, password) =>\r\n+        Firebase.auth().createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        Firebase.auth().signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173668197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        Firebase.auth().signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email, password) =>\r\n+        Firebase.auth().createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        Firebase.auth().signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173678728,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        Firebase.auth().signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email, password) =>\r\n+        Firebase.auth.createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        Firebase.auth().signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173684995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        auth().signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email, password) =>\r\n+        auth.createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        Firebase.auth().signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173691477,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        auth.signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email, password) =>\r\n+        auth.createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        auth.signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173728152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        auth.signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email: st, password) =>\r\n+        auth.createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        auth.signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173777417,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        auth.signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        auth.signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173784589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        auth.signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173799854,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        auth.signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173851360,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const createAccount = async () => {\r\n+        try {\r\n+            await createUserWithEmailAndPassword(\r\n+                auth,\r\n+                emailRef.current!.value,\r\n+                passwordRef.current!.value\r\n+            )\r\n+        } catch (error) {\r\n+            console.error(error);\r\n+        }\r\n+    };\r\n+\r\n+    const signIn = async () => {\r\n+        try {\r\n+            await signInWithEmailAndPassword(\r\n+                auth,\r\n+                emailRef.current!.value,\r\n+                passwordRef.current!.value\r\n+            );\r\n+        } catch (error) {\r\n+            console.error(error);\r\n+        }\r\n+    };\r\n+\r\n+    const signOut = async () => {\r\n+        await signOut();\r\n+    };\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173866569,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const createAccount = async () => {\r\n+        try {\r\n+            await createUserWithEmailAndPassword(\r\n+                auth,\r\n+                emailRef.current!.value,\r\n+                passwordRef.current!.value\r\n+            )\r\n+        } catch (error) {\r\n+            console.error(error);\r\n+        }\r\n+    };\r\n+\r\n+    const signIn = async () => {\r\n+        try {\r\n+            await signInWithEmailAndPassword(\r\n+                auth,\r\n+                email: str,\r\n+                passwordRef.current!.value\r\n+            );\r\n+        } catch (error) {\r\n+            console.error(error);\r\n+        }\r\n+    };\r\n+\r\n+    const signOut = async () => {\r\n+        await signOut();\r\n+    };\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173878999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,78 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const createAccount = async () => {\r\n+        try {\r\n+            await createUserWithEmailAndPassword(\r\n+                auth,\r\n+                emailRef.current!.value,\r\n+                passwordRef.current!.value\r\n+            )\r\n+        } catch (error) {\r\n+            console.error(error);\r\n+        }\r\n+    };\r\n+\r\n+    const signIn = async () => {\r\n+        try {\r\n+            await signInWithEmailAndPassword(\r\n+                auth,\r\n+                email:,\r\n+                passwordRef.current!.value\r\n+            );\r\n+        } catch (error) {\r\n+            console.error(error);\r\n+        }\r\n+    };\r\n+\r\n+    const signOut = async () => {\r\n+        await signOut();\r\n+    };\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173915353,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signInWithEmailAndPassword = (email, password) =>\r\n+        signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        auth.signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173931852,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createUserWithEmailAndPassword = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        auth.signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173937822,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const create = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        auth.signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173952161,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPassword(email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173957788,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,59 @@\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPasswor(email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173969007,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173976657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630173989612,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPassword(auth, email: string, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630174005069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPassword(auth: Auth, email: string, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630174011657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email, password) =>\r\n+        signInWithEmailAndPassword(auth, email: string, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630174040396,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signInWithEmailAndPassword,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630174064324,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createUserWithEmailAndPassword,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630174070580,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630177728143,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function firebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630177762942,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+  });\r\n+  \r\n+  export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+  \r\n+    const authStateChanged = async (authState) => {\r\n+      if (!authState) {\r\n+        setAuthUser(null)\r\n+        setLoading(false)\r\n+        return;\r\n+      }\r\n+  \r\n+      setLoading(true)\r\n+      var formattedUser = formatAuthUser(authState);\r\n+      setAuthUser(formattedUser);    \r\n+      setLoading(false);\r\n+    };\r\n+  \r\n+  // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+    \r\n+        return () => unsubscribe()\r\n+      }, []);\r\n+  \r\n+      const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+      };\r\n+    \r\n+      const signIn = (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const createAccount = (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+    \r\n+      const signOut = () =>\r\n+        signOut().then(clear);\r\n+    \r\n+      useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+      }, []);\r\n+    \r\n+      return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+      }\r\n+  }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630177983856,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,2188 +4,57 @@\n \r\n const formatAuthUser = (user) => ({\r\n     uid: user.uid,\r\n     email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-      }\r\n-  }\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n+});\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function firebaseAuth() {\r\n+export default function useFirebaseAuth() {\r\n     const [authUser, setAuthUser] = useState(null);\r\n     const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-      }\r\n-  }\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n     const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-      }\r\n-  }\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n     };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n+    // listen for Firebase state change\r\n     useEffect(() => {\r\n         const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n         return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n-        signInWithEmailAndPassword(auth, email: string, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n+    }, []);\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n+    const clear = () => {\r\n         setAuthUser(null);\r\n         setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n-        signInWithEmailAndPassword(auth: Auth, email: string, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n     };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n-        signInWithEmailAndPassword(auth, email: string, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n+    const signIn = (email: string, password) =>\r\n         signInWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n+\r\n+    const createAccount = (email: string, password) =>\r\n         createUserWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n+    const signOut = () =>\r\n         signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n     useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n-        signInWithEmailAndPasswor(email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n         return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n+    }, []);\r\n \r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n-        signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n+    return {\r\n         authUser,\r\n         loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n+        signIn,\r\n+        createAccount,\r\n         signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n-        signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const create = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        auth.signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signIn = (email, password) =>\r\n-        signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        auth.signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        auth.signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const createAccount = async () => {\r\n-        try {\r\n-            await createUserWithEmailAndPassword(\r\n-                auth,\r\n-                emailRef.current!.value,\r\n-                passwordRef.current!.value\r\n-            )\r\n-        } catch (error) {\r\n-            console.error(error);\r\n-        }\r\n-    };\r\n-\r\n-    const signIn = async () => {\r\n-        try {\r\n-            await signInWithEmailAndPassword(\r\n-                auth,\r\n-                email:,\r\n-                passwordRef.current!.value\r\n-            );\r\n-        } catch (error) {\r\n-            console.error(error);\r\n-        }\r\n-    };\r\n-\r\n-    const signOut = async () => {\r\n-        await signOut();\r\n-    };\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const createAccount = async () => {\r\n-        try {\r\n-            await createUserWithEmailAndPassword(\r\n-                auth,\r\n-                emailRef.current!.value,\r\n-                passwordRef.current!.value\r\n-            )\r\n-        } catch (error) {\r\n-            console.error(error);\r\n-        }\r\n-    };\r\n-\r\n-    const signIn = async () => {\r\n-        try {\r\n-            await signInWithEmailAndPassword(\r\n-                auth,\r\n-                email: str,\r\n-                passwordRef.current!.value\r\n-            );\r\n-        } catch (error) {\r\n-            console.error(error);\r\n-        }\r\n-    };\r\n-\r\n-    const signOut = async () => {\r\n-        await signOut();\r\n-    };\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const createAccount = async () => {\r\n-        try {\r\n-            await createUserWithEmailAndPassword(\r\n-                auth,\r\n-                emailRef.current!.value,\r\n-                passwordRef.current!.value\r\n-            )\r\n-        } catch (error) {\r\n-            console.error(error);\r\n-        }\r\n-    };\r\n-\r\n-    const signIn = async () => {\r\n-        try {\r\n-            await signInWithEmailAndPassword(\r\n-                auth,\r\n-                emailRef.current!.value,\r\n-                passwordRef.current!.value\r\n-            );\r\n-        } catch (error) {\r\n-            console.error(error);\r\n-        }\r\n-    };\r\n-\r\n-    const signOut = async () => {\r\n-        await signOut();\r\n-    };\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        auth.signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        auth.signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        auth.signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        auth.signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        auth.signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email: st, password) =>\r\n-        auth.createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        auth.signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        auth.signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email, password) =>\r\n-        auth.createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        auth.signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        auth().signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email, password) =>\r\n-        auth.createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        Firebase.auth().signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        Firebase.auth().signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email, password) =>\r\n-        Firebase.auth.createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        Firebase.auth().signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        Firebase.auth().signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email, password) =>\r\n-        Firebase.auth().createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        Firebase.auth().signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        Firebase.auth().signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email, password) =>\r\n-        Firebase.auth().createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        Firebase.auth().signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-      const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-      };\r\n-    \r\n-      const signInWithEmailAndPassword = (email, password) =>\r\n-        Firebase.auth().signInWithEmailAndPassword(email, password);\r\n-    \r\n-      const createUserWithEmailAndPassword = (email, password) =>\r\n-        Firebase.auth().createUserWithEmailAndPassword(email, password);\r\n-    \r\n-      const signOut = () =>\r\n-        Firebase.auth().signOut().then(clear);\r\n-    \r\n-      useEffect(() => {\r\n-        const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-      }, []);\r\n-    \r\n-      return {\r\n-        authUser,\r\n-        loading,\r\n-        signInWithEmailAndPassword,\r\n-        createUserWithEmailAndPassword,\r\n-        signOut\r\n-      }\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return () => unsubscribe()\r\n-      }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-    \r\n-        return unsubscribe;\r\n-      }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged) => {\r\n-        });\r\n-    \r\n-        return unsubscribe;\r\n-      }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged((authStateChanged) => {\r\n-        });\r\n-    \r\n-        return unsubscribe;\r\n-      }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\r\n-        });\r\n-    \r\n-        return unsubscribe;\r\n-      }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\r\n-        });\r\n-    \r\n-        return unsubscribe;\r\n-      }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    \r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\r\n-        setUser(firebaseUser);\r\n-      });\r\n-  \r\n-      return unsubscribe;\r\n-    }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-  useEffect(() => {\r\n-    const unsubscribe = auth.onAuthStateChanged((firebaseUser) => {\r\n-      setUser(firebaseUser);\r\n-    });\r\n-\r\n-    return unsubscribe;\r\n-  }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-import { useEffect, useState } from \"react\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-  });\r\n-  \r\n-  export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-  \r\n-    const authStateChanged = async (authState) => {\r\n-      if (!authState) {\r\n\\ No newline at end of file\n-        setAuthUser(null)\r\n-        setLoading(false)\r\n-        return;\r\n-      }\r\n-  \r\n-      setLoading(true)\r\n-      var formattedUser = formatAuthUser(authState);\r\n-      setAuthUser(formattedUser);    \r\n-      setLoading(false);\r\n-    };\r\n-  \r\n-  // listen for Firebase state change\r\n-    useEffect(() => {\r\n-      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n-      return () => unsubscribe();\r\n-    }, []);\r\n-  \r\n-    return {\r\n-      authUser,\r\n-      loading\r\n-    };\r\n-  }\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630178043751,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const createAccount = async (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630178090921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const createAccount = async (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630178096197,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,60 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const createAccount = async (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const signOut = async () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630178139637,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const createAccount = async (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const signOut = async () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630178558982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>\r\n+        signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const createAccount = async (email, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const signOut = async () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630179773848,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,54 @@\n+// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { auth } from \"./initialiseFirebase\";\r\n+\r\n+// const formatAuthUser = (user) => ({\r\n+//     uid: user.uid,\r\n+//     email: user.email\r\n+// });\r\n+\r\n+// export default function useFirebaseAuth() {\r\n+//     const [authUser, setAuthUser] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+\r\n+//     const authStateChanged = async (authState) => {\r\n+//         if (!authState) {\r\n+//             setAuthUser(null)\r\n+//             setLoading(false)\r\n+//             return;\r\n+//         }\r\n+\r\n+//         setLoading(true)\r\n+//         var formattedUser = formatAuthUser(authState);\r\n+//         setAuthUser(formattedUser);\r\n+//         setLoading(false);\r\n+//     };\r\n+\r\n+\r\n+//     const clear = () => {\r\n+//         setAuthUser(null);\r\n+//         setLoading(true);\r\n+//     };\r\n+\r\n+//     const signIn = async (email, password) =>\r\n+//         signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const createAccount = async (email, password) =>\r\n+//         createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const signOut = async () =>\r\n+//         signOut().then(clear);\r\n+\r\n+//     useEffect(() => {\r\n+//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+//         return () => unsubscribe();\r\n+//     }, []);\r\n+\r\n+//     return {\r\n+//         authUser,\r\n+//         loading,\r\n+//         signIn,\r\n+//         createAccount,\r\n+//         signOut\r\n+//     }\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630179781861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,57 @@\n+\r\n+\r\n+\r\n+// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { auth } from \"./initialiseFirebase\";\r\n+\r\n+// const formatAuthUser = (user) => ({\r\n+//     uid: user.uid,\r\n+//     email: user.email\r\n+// });\r\n+\r\n+// export default function useFirebaseAuth() {\r\n+//     const [authUser, setAuthUser] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+\r\n+//     const authStateChanged = async (authState) => {\r\n+//         if (!authState) {\r\n+//             setAuthUser(null)\r\n+//             setLoading(false)\r\n+//             return;\r\n+//         }\r\n+\r\n+//         setLoading(true)\r\n+//         var formattedUser = formatAuthUser(authState);\r\n+//         setAuthUser(formattedUser);\r\n+//         setLoading(false);\r\n+//     };\r\n+\r\n+\r\n+//     const clear = () => {\r\n+//         setAuthUser(null);\r\n+//         setLoading(true);\r\n+//     };\r\n+\r\n+//     const signIn = async (email, password) =>\r\n+//         signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const createAccount = async (email, password) =>\r\n+//         createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const signOut = async () =>\r\n+//         signOut().then(clear);\r\n+\r\n+//     useEffect(() => {\r\n+//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+//         return () => unsubscribe();\r\n+//     }, []);\r\n+\r\n+//     return {\r\n+//         authUser,\r\n+//         loading,\r\n+//         signIn,\r\n+//         createAccount,\r\n+//         signOut\r\n+//     }\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630179806151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+import { FunctionComponent, useState, useEffect } from \"react\";\r\n+import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n+import { firebase } from \"src/initFirebase\";\r\n+\r\n+const firebaseAuthConfig = {\r\n+  signInFlow: \"popup\",\r\n+  signInOptions: [\r\n+    {\r\n+      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n+      requireDisplayName: false,\r\n+    },\r\n+\r\n+  ],\r\n+  signInSuccessUrl: \"/\",\r\n+};\r\n+\r\n+const FirebaseAuth: FunctionComponent = () => {\r\n+  const [show, setShow] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    setShow(true);\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div>\r\n+      {show && (\r\n+        <StyledFirebaseAuth\r\n+          uiConfig={firebaseAuthConfig}\r\n+          firebaseAuth={firebase.auth()}\r\n+        />\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FirebaseAuth;\r\n+\r\n+\r\n+// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { auth } from \"./initialiseFirebase\";\r\n+\r\n+// const formatAuthUser = (user) => ({\r\n+//     uid: user.uid,\r\n+//     email: user.email\r\n+// });\r\n+\r\n+// export default function useFirebaseAuth() {\r\n+//     const [authUser, setAuthUser] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+\r\n+//     const authStateChanged = async (authState) => {\r\n+//         if (!authState) {\r\n+//             setAuthUser(null)\r\n+//             setLoading(false)\r\n+//             return;\r\n+//         }\r\n+\r\n+//         setLoading(true)\r\n+//         var formattedUser = formatAuthUser(authState);\r\n+//         setAuthUser(formattedUser);\r\n+//         setLoading(false);\r\n+//     };\r\n+\r\n+\r\n+//     const clear = () => {\r\n+//         setAuthUser(null);\r\n+//         setLoading(true);\r\n+//     };\r\n+\r\n+//     const signIn = async (email, password) =>\r\n+//         signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const createAccount = async (email, password) =>\r\n+//         createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const signOut = async () =>\r\n+//         signOut().then(clear);\r\n+\r\n+//     useEffect(() => {\r\n+//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+//         return () => unsubscribe();\r\n+//     }, []);\r\n+\r\n+//     return {\r\n+//         authUser,\r\n+//         loading,\r\n+//         signIn,\r\n+//         createAccount,\r\n+//         signOut\r\n+//     }\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630179865840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+import { FunctionComponent, useState, useEffect } from \"react\";\r\n+import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n+import { firebase } from \"src/initFirebase\";\r\n+\r\n+const firebaseAuthConfig = {\r\n+  signInFlow: \"popup\",\r\n+  signInOptions: [\r\n+    {\r\n+      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n+      requireDisplayName: false,\r\n+    },\r\n+  ],\r\n+  signInSuccessUrl: \"/\",\r\n+};\r\n+\r\n+const FirebaseAuth: FunctionComponent = () => {\r\n+  const [show, setShow] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    setShow(true);\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div>\r\n+      {show && (\r\n+        <StyledFirebaseAuth\r\n+          uiConfig={firebaseAuthConfig}\r\n+          firebaseAuth={au}\r\n+        />\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FirebaseAuth;\r\n+\r\n+\r\n+// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { auth } from \"./initialiseFirebase\";\r\n+\r\n+// const formatAuthUser = (user) => ({\r\n+//     uid: user.uid,\r\n+//     email: user.email\r\n+// });\r\n+\r\n+// export default function useFirebaseAuth() {\r\n+//     const [authUser, setAuthUser] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+\r\n+//     const authStateChanged = async (authState) => {\r\n+//         if (!authState) {\r\n+//             setAuthUser(null)\r\n+//             setLoading(false)\r\n+//             return;\r\n+//         }\r\n+\r\n+//         setLoading(true)\r\n+//         var formattedUser = formatAuthUser(authState);\r\n+//         setAuthUser(formattedUser);\r\n+//         setLoading(false);\r\n+//     };\r\n+\r\n+\r\n+//     const clear = () => {\r\n+//         setAuthUser(null);\r\n+//         setLoading(true);\r\n+//     };\r\n+\r\n+//     const signIn = async (email, password) =>\r\n+//         signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const createAccount = async (email, password) =>\r\n+//         createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const signOut = async () =>\r\n+//         signOut().then(clear);\r\n+\r\n+//     useEffect(() => {\r\n+//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+//         return () => unsubscribe();\r\n+//     }, []);\r\n+\r\n+//     return {\r\n+//         authUser,\r\n+//         loading,\r\n+//         signIn,\r\n+//         createAccount,\r\n+//         signOut\r\n+//     }\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630179878909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,91 @@\n+import { FunctionComponent, useState, useEffect } from \"react\";\r\n+import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n+\r\n+\r\n+const firebaseAuthConfig = {\r\n+  signInFlow: \"popup\",\r\n+  signInOptions: [\r\n+    {\r\n+      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n+      requireDisplayName: false,\r\n+    },\r\n+  ],\r\n+  signInSuccessUrl: \"/\",\r\n+};\r\n+\r\n+const FirebaseAuth: FunctionComponent = () => {\r\n+  const [show, setShow] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    setShow(true);\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div>\r\n+      {show && (\r\n+        <StyledFirebaseAuth\r\n+          uiConfig={firebaseAuthConfig}\r\n+          firebaseAuth={auth}\r\n+        />\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FirebaseAuth;\r\n+\r\n+\r\n+// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { auth } from \"./initialiseFirebase\";\r\n+\r\n+// const formatAuthUser = (user) => ({\r\n+//     uid: user.uid,\r\n+//     email: user.email\r\n+// });\r\n+\r\n+// export default function useFirebaseAuth() {\r\n+//     const [authUser, setAuthUser] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+\r\n+//     const authStateChanged = async (authState) => {\r\n+//         if (!authState) {\r\n+//             setAuthUser(null)\r\n+//             setLoading(false)\r\n+//             return;\r\n+//         }\r\n+\r\n+//         setLoading(true)\r\n+//         var formattedUser = formatAuthUser(authState);\r\n+//         setAuthUser(formattedUser);\r\n+//         setLoading(false);\r\n+//     };\r\n+\r\n+\r\n+//     const clear = () => {\r\n+//         setAuthUser(null);\r\n+//         setLoading(true);\r\n+//     };\r\n+\r\n+//     const signIn = async (email, password) =>\r\n+//         signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const createAccount = async (email, password) =>\r\n+//         createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const signOut = async () =>\r\n+//         signOut().then(clear);\r\n+\r\n+//     useEffect(() => {\r\n+//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+//         return () => unsubscribe();\r\n+//     }, []);\r\n+\r\n+//     return {\r\n+//         authUser,\r\n+//         loading,\r\n+//         signIn,\r\n+//         createAccount,\r\n+//         signOut\r\n+//     }\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630179891845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,9 @@\n     <div>\r\n       {show && (\r\n         <StyledFirebaseAuth\r\n           uiConfig={firebaseAuthConfig}\r\n-          firebaseAuth={auth}\r\n+          firebaseAuth= a\r\n         />\r\n       )}\r\n     </div>\r\n   );\r\n@@ -87,647 +87,5 @@\n //         signIn,\r\n //         createAccount,\r\n //         signOut\r\n //     }\r\n-// }\n-import { FunctionComponent, useState, useEffect } from \"react\";\r\n-import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n-import { firebase } from \"src/initFirebase\";\r\n-\r\n-const firebaseAuthConfig = {\r\n-  signInFlow: \"popup\",\r\n-  signInOptions: [\r\n-    {\r\n-      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n-      requireDisplayName: false,\r\n-    },\r\n-  ],\r\n-  signInSuccessUrl: \"/\",\r\n-};\r\n-\r\n-const FirebaseAuth: FunctionComponent = () => {\r\n-  const [show, setShow] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    setShow(true);\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div>\r\n-      {show && (\r\n-        <StyledFirebaseAuth\r\n-          uiConfig={firebaseAuthConfig}\r\n-          firebaseAuth={au}\r\n-        />\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default FirebaseAuth;\r\n-\r\n-\r\n-// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-// import { useEffect, useState } from \"react\";\r\n-// import { auth } from \"./initialiseFirebase\";\r\n-\r\n-// const formatAuthUser = (user) => ({\r\n-//     uid: user.uid,\r\n-//     email: user.email\r\n-// });\r\n-\r\n-// export default function useFirebaseAuth() {\r\n-//     const [authUser, setAuthUser] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-\r\n-//     const authStateChanged = async (authState) => {\r\n-//         if (!authState) {\r\n-//             setAuthUser(null)\r\n-//             setLoading(false)\r\n-//             return;\r\n-//         }\r\n-\r\n-//         setLoading(true)\r\n-//         var formattedUser = formatAuthUser(authState);\r\n-//         setAuthUser(formattedUser);\r\n-//         setLoading(false);\r\n-//     };\r\n-\r\n-\r\n-//     const clear = () => {\r\n-//         setAuthUser(null);\r\n-//         setLoading(true);\r\n-//     };\r\n-\r\n-//     const signIn = async (email, password) =>\r\n-//         signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const createAccount = async (email, password) =>\r\n-//         createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const signOut = async () =>\r\n-//         signOut().then(clear);\r\n-\r\n-//     useEffect(() => {\r\n-//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-//         return () => unsubscribe();\r\n-//     }, []);\r\n-\r\n-//     return {\r\n-//         authUser,\r\n-//         loading,\r\n-//         signIn,\r\n-//         createAccount,\r\n-//         signOut\r\n-//     }\r\n-// }\n-import { FunctionComponent, useState, useEffect } from \"react\";\r\n-import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n-import { firebase } from \"src/initFirebase\";\r\n-\r\n-const firebaseAuthConfig = {\r\n-  signInFlow: \"popup\",\r\n-  signInOptions: [\r\n-    {\r\n-      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n-      requireDisplayName: false,\r\n-    },\r\n-\r\n-  ],\r\n-  signInSuccessUrl: \"/\",\r\n-};\r\n-\r\n-const FirebaseAuth: FunctionComponent = () => {\r\n-  const [show, setShow] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    setShow(true);\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div>\r\n-      {show && (\r\n-        <StyledFirebaseAuth\r\n-          uiConfig={firebaseAuthConfig}\r\n-          firebaseAuth={firebase.auth()}\r\n-        />\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default FirebaseAuth;\r\n-\r\n-\r\n-// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-// import { useEffect, useState } from \"react\";\r\n-// import { auth } from \"./initialiseFirebase\";\r\n-\r\n-// const formatAuthUser = (user) => ({\r\n-//     uid: user.uid,\r\n-//     email: user.email\r\n-// });\r\n-\r\n-// export default function useFirebaseAuth() {\r\n-//     const [authUser, setAuthUser] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-\r\n-//     const authStateChanged = async (authState) => {\r\n-//         if (!authState) {\r\n-//             setAuthUser(null)\r\n-//             setLoading(false)\r\n-//             return;\r\n-//         }\r\n-\r\n-//         setLoading(true)\r\n-//         var formattedUser = formatAuthUser(authState);\r\n-//         setAuthUser(formattedUser);\r\n-//         setLoading(false);\r\n-//     };\r\n-\r\n-\r\n-//     const clear = () => {\r\n-//         setAuthUser(null);\r\n-//         setLoading(true);\r\n-//     };\r\n-\r\n-//     const signIn = async (email, password) =>\r\n-//         signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const createAccount = async (email, password) =>\r\n-//         createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const signOut = async () =>\r\n-//         signOut().then(clear);\r\n-\r\n-//     useEffect(() => {\r\n-//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-//         return () => unsubscribe();\r\n-//     }, []);\r\n-\r\n-//     return {\r\n-//         authUser,\r\n-//         loading,\r\n-//         signIn,\r\n-//         createAccount,\r\n-//         signOut\r\n-//     }\r\n-// }\n-\r\n-\r\n-\r\n-// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-// import { useEffect, useState } from \"react\";\r\n-// import { auth } from \"./initialiseFirebase\";\r\n-\r\n-// const formatAuthUser = (user) => ({\r\n-//     uid: user.uid,\r\n-//     email: user.email\r\n-// });\r\n-\r\n-// export default function useFirebaseAuth() {\r\n-//     const [authUser, setAuthUser] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-\r\n-//     const authStateChanged = async (authState) => {\r\n-//         if (!authState) {\r\n-//             setAuthUser(null)\r\n-//             setLoading(false)\r\n-//             return;\r\n-//         }\r\n-\r\n-//         setLoading(true)\r\n-//         var formattedUser = formatAuthUser(authState);\r\n-//         setAuthUser(formattedUser);\r\n-//         setLoading(false);\r\n-//     };\r\n-\r\n-\r\n-//     const clear = () => {\r\n-//         setAuthUser(null);\r\n-//         setLoading(true);\r\n-//     };\r\n-\r\n-//     const signIn = async (email, password) =>\r\n-//         signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const createAccount = async (email, password) =>\r\n-//         createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const signOut = async () =>\r\n-//         signOut().then(clear);\r\n-\r\n-//     useEffect(() => {\r\n-//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-//         return () => unsubscribe();\r\n-//     }, []);\r\n-\r\n-//     return {\r\n-//         authUser,\r\n-//         loading,\r\n-//         signIn,\r\n-//         createAccount,\r\n-//         signOut\r\n-//     }\r\n-// }\n-// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-// import { useEffect, useState } from \"react\";\r\n-// import { auth } from \"./initialiseFirebase\";\r\n-\r\n-// const formatAuthUser = (user) => ({\r\n-//     uid: user.uid,\r\n-//     email: user.email\r\n-// });\r\n-\r\n-// export default function useFirebaseAuth() {\r\n-//     const [authUser, setAuthUser] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-\r\n-//     const authStateChanged = async (authState) => {\r\n-//         if (!authState) {\r\n-//             setAuthUser(null)\r\n-//             setLoading(false)\r\n-//             return;\r\n-//         }\r\n-\r\n-//         setLoading(true)\r\n-//         var formattedUser = formatAuthUser(authState);\r\n-//         setAuthUser(formattedUser);\r\n-//         setLoading(false);\r\n-//     };\r\n-\r\n-\r\n-//     const clear = () => {\r\n-//         setAuthUser(null);\r\n-//         setLoading(true);\r\n-//     };\r\n-\r\n-//     const signIn = async (email, password) =>\r\n-//         signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const createAccount = async (email, password) =>\r\n-//         createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const signOut = async () =>\r\n-//         signOut().then(clear);\r\n-\r\n-//     useEffect(() => {\r\n-//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-//         return () => unsubscribe();\r\n-//     }, []);\r\n-\r\n-//     return {\r\n-//         authUser,\r\n-//         loading,\r\n-//         signIn,\r\n-//         createAccount,\r\n-//         signOut\r\n-//     }\r\n-// }\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-});\r\n-\r\n-export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-\r\n-    const authStateChanged = async (authState) => {\r\n-        if (!authState) {\r\n-            setAuthUser(null)\r\n-            setLoading(false)\r\n-            return;\r\n-        }\r\n-\r\n-        setLoading(true)\r\n-        var formattedUser = formatAuthUser(authState);\r\n-        setAuthUser(formattedUser);\r\n-        setLoading(false);\r\n-    };\r\n-\r\n-\r\n-    const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-    };\r\n-\r\n-    const signIn = async (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const createAccount = async (email, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const signOut = async () =>\r\n-        signOut().then(clear);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-    }\r\n-}\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-});\r\n-\r\n-export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-\r\n-    const authStateChanged = async (authState) => {\r\n-        if (!authState) {\r\n-            setAuthUser(null)\r\n-            setLoading(false)\r\n-            return;\r\n-        }\r\n-\r\n-        setLoading(true)\r\n-        var formattedUser = formatAuthUser(authState);\r\n-        setAuthUser(formattedUser);\r\n-        setLoading(false);\r\n-    };\r\n-\r\n-\r\n-    const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-    };\r\n-\r\n-    const signIn = async (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const createAccount = async (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const signOut = async () =>\r\n-        signOut().then(clear);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-    }\r\n-}\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-});\r\n-\r\n-export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-\r\n-    const authStateChanged = async (authState) => {\r\n-        if (!authState) {\r\n-            setAuthUser(null)\r\n-            setLoading(false)\r\n-            return;\r\n-        }\r\n-\r\n-        setLoading(true)\r\n-        var formattedUser = formatAuthUser(authState);\r\n-        setAuthUser(formattedUser);\r\n-        setLoading(false);\r\n-    };\r\n-\r\n-    // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-\r\n-        return () => unsubscribe()\r\n-    }, []);\r\n-\r\n-    const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-    };\r\n-\r\n-    const signIn = async (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const createAccount = async (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const signOut = async () =>\r\n-        signOut().then(clear);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-    }\r\n-}\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-});\r\n-\r\n-export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-\r\n-    const authStateChanged = async (authState) => {\r\n-        if (!authState) {\r\n-            setAuthUser(null)\r\n-            setLoading(false)\r\n-            return;\r\n-        }\r\n-\r\n-        setLoading(true)\r\n-        var formattedUser = formatAuthUser(authState);\r\n-        setAuthUser(formattedUser);\r\n-        setLoading(false);\r\n-    };\r\n-\r\n-    // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-\r\n-        return () => unsubscribe()\r\n-    }, []);\r\n-\r\n-    const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-    };\r\n-\r\n-    const signIn = async (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const createAccount = async (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const signOut = () =>\r\n-        signOut().then(clear);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-    }\r\n-}\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-});\r\n-\r\n-export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-\r\n-    const authStateChanged = async (authState) => {\r\n-        if (!authState) {\r\n-            setAuthUser(null)\r\n-            setLoading(false)\r\n-            return;\r\n-        }\r\n-\r\n-        setLoading(true)\r\n-        var formattedUser = formatAuthUser(authState);\r\n-        setAuthUser(formattedUser);\r\n-        setLoading(false);\r\n-    };\r\n-\r\n-    // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-\r\n-        return () => unsubscribe()\r\n-    }, []);\r\n-\r\n-    const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-    };\r\n-\r\n-    const signIn = (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const createAccount = async (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const signOut = () =>\r\n-        signOut().then(clear);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-    }\r\n-}\n-import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-import { useEffect, useState } from \"react\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-const formatAuthUser = (user) => ({\r\n-    uid: user.uid,\r\n-    email: user.email\r\n-});\r\n-\r\n-export default function useFirebaseAuth() {\r\n-    const [authUser, setAuthUser] = useState(null);\r\n-    const [loading, setLoading] = useState(true);\r\n-\r\n-    const authStateChanged = async (authState) => {\r\n-        if (!authState) {\r\n-            setAuthUser(null)\r\n-            setLoading(false)\r\n-            return;\r\n-        }\r\n-\r\n-        setLoading(true)\r\n-        var formattedUser = formatAuthUser(authState);\r\n-        setAuthUser(formattedUser);\r\n-        setLoading(false);\r\n-    };\r\n-\r\n-    // listen for Firebase state change\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n-\r\n-        return () => unsubscribe()\r\n-    }, []);\r\n-\r\n-    const clear = () => {\r\n-        setAuthUser(null);\r\n-        setLoading(true);\r\n-    };\r\n-\r\n-    const signIn = (email: string, password) =>\r\n-        signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const createAccount = (email: string, password) =>\r\n-        createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-    const signOut = () =>\r\n-        signOut().then(clear);\r\n-\r\n-    useEffect(() => {\r\n-        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-        return () => unsubscribe();\r\n-    }, []);\r\n-\r\n-    return {\r\n-        authUser,\r\n-        loading,\r\n-        signIn,\r\n-        createAccount,\r\n-        signOut\r\n-    }\r\n-}\n\\ No newline at end of file\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630179897949,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+import { FunctionComponent, useState, useEffect } from \"react\";\r\n+import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+const firebaseAuthConfig = {\r\n+  signInFlow: \"popup\",\r\n+  signInOptions: [\r\n+    {\r\n+      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n+      requireDisplayName: false,\r\n+    },\r\n+  ],\r\n+  signInSuccessUrl: \"/\",\r\n+};\r\n+\r\n+const FirebaseAuth: FunctionComponent = () => {\r\n+  const [show, setShow] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    setShow(true);\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div>\r\n+      {show && (\r\n+        <StyledFirebaseAuth\r\n+          uiConfig={firebaseAuthConfig}\r\n+          firebaseAuth= auth\r\n+        />\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FirebaseAuth;\r\n+\r\n+\r\n+// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { auth } from \"./initialiseFirebase\";\r\n+\r\n+// const formatAuthUser = (user) => ({\r\n+//     uid: user.uid,\r\n+//     email: user.email\r\n+// });\r\n+\r\n+// export default function useFirebaseAuth() {\r\n+//     const [authUser, setAuthUser] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+\r\n+//     const authStateChanged = async (authState) => {\r\n+//         if (!authState) {\r\n+//             setAuthUser(null)\r\n+//             setLoading(false)\r\n+//             return;\r\n+//         }\r\n+\r\n+//         setLoading(true)\r\n+//         var formattedUser = formatAuthUser(authState);\r\n+//         setAuthUser(formattedUser);\r\n+//         setLoading(false);\r\n+//     };\r\n+\r\n+\r\n+//     const clear = () => {\r\n+//         setAuthUser(null);\r\n+//         setLoading(true);\r\n+//     };\r\n+\r\n+//     const signIn = async (email, password) =>\r\n+//         signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const createAccount = async (email, password) =>\r\n+//         createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const signOut = async () =>\r\n+//         signOut().then(clear);\r\n+\r\n+//     useEffect(() => {\r\n+//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+//         return () => unsubscribe();\r\n+//     }, []);\r\n+\r\n+//     return {\r\n+//         authUser,\r\n+//         loading,\r\n+//         signIn,\r\n+//         createAccount,\r\n+//         signOut\r\n+//     }\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630179906340,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,92 @@\n+import { FunctionComponent, useState, useEffect } from \"react\";\r\n+import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+const firebaseAuthConfig = {\r\n+  signInFlow: \"popup\",\r\n+  signInOptions: [\r\n+    {\r\n+      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n+      requireDisplayName: false,\r\n+    },\r\n+  ],\r\n+  signInSuccessUrl: \"/\",\r\n+};\r\n+\r\n+const FirebaseAuth: FunctionComponent = () => {\r\n+  const [show, setShow] = useState(false);\r\n+\r\n+  useEffect(() => {\r\n+    setShow(true);\r\n+  }, []);\r\n+\r\n+  return (\r\n+    <div>\r\n+      {show && (\r\n+        <StyledFirebaseAuth\r\n+          uiConfig={firebaseAuthConfig}\r\n+          firebaseAuth = {auth}\r\n+        />\r\n+      )}\r\n+    </div>\r\n+  );\r\n+};\r\n+\r\n+export default FirebaseAuth;\r\n+\r\n+\r\n+// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+// import { useEffect, useState } from \"react\";\r\n+// import { auth } from \"./initialiseFirebase\";\r\n+\r\n+// const formatAuthUser = (user) => ({\r\n+//     uid: user.uid,\r\n+//     email: user.email\r\n+// });\r\n+\r\n+// export default function useFirebaseAuth() {\r\n+//     const [authUser, setAuthUser] = useState(null);\r\n+//     const [loading, setLoading] = useState(true);\r\n+\r\n+//     const authStateChanged = async (authState) => {\r\n+//         if (!authState) {\r\n+//             setAuthUser(null)\r\n+//             setLoading(false)\r\n+//             return;\r\n+//         }\r\n+\r\n+//         setLoading(true)\r\n+//         var formattedUser = formatAuthUser(authState);\r\n+//         setAuthUser(formattedUser);\r\n+//         setLoading(false);\r\n+//     };\r\n+\r\n+\r\n+//     const clear = () => {\r\n+//         setAuthUser(null);\r\n+//         setLoading(true);\r\n+//     };\r\n+\r\n+//     const signIn = async (email, password) =>\r\n+//         signInWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const createAccount = async (email, password) =>\r\n+//         createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+//     const signOut = async () =>\r\n+//         signOut().then(clear);\r\n+\r\n+//     useEffect(() => {\r\n+//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+//         return () => unsubscribe();\r\n+//     }, []);\r\n+\r\n+//     return {\r\n+//         authUser,\r\n+//         loading,\r\n+//         signIn,\r\n+//         createAccount,\r\n+//         signOut\r\n+//     }\r\n+// }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630181716782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,9 +25,9 @@\n     <div>\r\n       {show && (\r\n         <StyledFirebaseAuth\r\n           uiConfig={firebaseAuthConfig}\r\n-          firebaseAuth = {auth}\r\n+          firebaseAuth= {auth}\r\n         />\r\n       )}\r\n     </div>\r\n   );\r\n@@ -88,188 +88,5 @@\n //         signIn,\r\n //         createAccount,\r\n //         signOut\r\n //     }\r\n-// }\n-import { FunctionComponent, useState, useEffect } from \"react\";\r\n-import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n-import { auth } from \"./initialiseFirebase\";\r\n-\r\n-\r\n-const firebaseAuthConfig = {\r\n-  signInFlow: \"popup\",\r\n-  signInOptions: [\r\n-    {\r\n-      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n-      requireDisplayName: false,\r\n-    },\r\n-  ],\r\n-  signInSuccessUrl: \"/\",\r\n-};\r\n-\r\n-const FirebaseAuth: FunctionComponent = () => {\r\n-  const [show, setShow] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    setShow(true);\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div>\r\n-      {show && (\r\n-        <StyledFirebaseAuth\r\n-          uiConfig={firebaseAuthConfig}\r\n-          firebaseAuth= auth\r\n-        />\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default FirebaseAuth;\r\n-\r\n-\r\n-// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-// import { useEffect, useState } from \"react\";\r\n-// import { auth } from \"./initialiseFirebase\";\r\n-\r\n-// const formatAuthUser = (user) => ({\r\n-//     uid: user.uid,\r\n-//     email: user.email\r\n-// });\r\n-\r\n-// export default function useFirebaseAuth() {\r\n-//     const [authUser, setAuthUser] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-\r\n-//     const authStateChanged = async (authState) => {\r\n-//         if (!authState) {\r\n-//             setAuthUser(null)\r\n-//             setLoading(false)\r\n-//             return;\r\n-//         }\r\n-\r\n-//         setLoading(true)\r\n-//         var formattedUser = formatAuthUser(authState);\r\n-//         setAuthUser(formattedUser);\r\n-//         setLoading(false);\r\n-//     };\r\n-\r\n-\r\n-//     const clear = () => {\r\n-//         setAuthUser(null);\r\n-//         setLoading(true);\r\n-//     };\r\n-\r\n-//     const signIn = async (email, password) =>\r\n-//         signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const createAccount = async (email, password) =>\r\n-//         createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const signOut = async () =>\r\n-//         signOut().then(clear);\r\n-\r\n-//     useEffect(() => {\r\n-//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-//         return () => unsubscribe();\r\n-//     }, []);\r\n-\r\n-//     return {\r\n-//         authUser,\r\n-//         loading,\r\n-//         signIn,\r\n-//         createAccount,\r\n-//         signOut\r\n-//     }\r\n-// }\n-import { FunctionComponent, useState, useEffect } from \"react\";\r\n-import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n-\r\n-\r\n-const firebaseAuthConfig = {\r\n-  signInFlow: \"popup\",\r\n-  signInOptions: [\r\n-    {\r\n-      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n-      requireDisplayName: false,\r\n-    },\r\n-  ],\r\n-  signInSuccessUrl: \"/\",\r\n-};\r\n-\r\n-const FirebaseAuth: FunctionComponent = () => {\r\n-  const [show, setShow] = useState(false);\r\n-\r\n-  useEffect(() => {\r\n-    setShow(true);\r\n-  }, []);\r\n-\r\n-  return (\r\n-    <div>\r\n-      {show && (\r\n-        <StyledFirebaseAuth\r\n-          uiConfig={firebaseAuthConfig}\r\n-          firebaseAuth= a\r\n-        />\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n-\r\n-export default FirebaseAuth;\r\n-\r\n-\r\n-// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-// import { useEffect, useState } from \"react\";\r\n-// import { auth } from \"./initialiseFirebase\";\r\n-\r\n-// const formatAuthUser = (user) => ({\r\n-//     uid: user.uid,\r\n-//     email: user.email\r\n-// });\r\n-\r\n-// export default function useFirebaseAuth() {\r\n-//     const [authUser, setAuthUser] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n-\r\n-//     const authStateChanged = async (authState) => {\r\n-//         if (!authState) {\r\n-//             setAuthUser(null)\r\n-//             setLoading(false)\r\n-//             return;\r\n-//         }\r\n-\r\n-//         setLoading(true)\r\n-//         var formattedUser = formatAuthUser(authState);\r\n-//         setAuthUser(formattedUser);\r\n-//         setLoading(false);\r\n-//     };\r\n-\r\n-\r\n-//     const clear = () => {\r\n-//         setAuthUser(null);\r\n-//         setLoading(true);\r\n-//     };\r\n-\r\n-//     const signIn = async (email, password) =>\r\n-//         signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const createAccount = async (email, password) =>\r\n-//         createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const signOut = async () =>\r\n-//         signOut().then(clear);\r\n-\r\n-//     useEffect(() => {\r\n-//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-//         return () => unsubscribe();\r\n-//     }, []);\r\n-\r\n-//     return {\r\n-//         authUser,\r\n-//         loading,\r\n-//         signIn,\r\n-//         createAccount,\r\n-//         signOut\r\n-//     }\r\n // }\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262028188,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,92 +1,64 @@\n-import { FunctionComponent, useState, useEffect } from \"react\";\r\n-import StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\";\r\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n import { auth } from \"./initialiseFirebase\";\r\n \r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n \r\n-const firebaseAuthConfig = {\r\n-  signInFlow: \"popup\",\r\n-  signInOptions: [\r\n-    {\r\n-      provider: firebase.auth.EmailAuthProvider.PROVIDER_ID,\r\n-      requireDisplayName: false,\r\n-    },\r\n-  ],\r\n-  signInSuccessUrl: \"/\",\r\n-};\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n \r\n-const FirebaseAuth: FunctionComponent = () => {\r\n-  const [show, setShow] = useState(false);\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n \r\n-  useEffect(() => {\r\n-    setShow(true);\r\n-  }, []);\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n \r\n-  return (\r\n-    <div>\r\n-      {show && (\r\n-        <StyledFirebaseAuth\r\n-          uiConfig={firebaseAuthConfig}\r\n-          firebaseAuth= {auth}\r\n-        />\r\n-      )}\r\n-    </div>\r\n-  );\r\n-};\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n \r\n-export default FirebaseAuth;\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n \r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n \r\n-// import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n-// import { useEffect, useState } from \"react\";\r\n-// import { auth } from \"./initialiseFirebase\";\r\n+    const signIn = async (email: string, password) =>\r\n+    try {\r\n+        await auth.signInWithEmailAndPassword(email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    const createAccount = async (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n \r\n-// const formatAuthUser = (user) => ({\r\n-//     uid: user.uid,\r\n-//     email: user.email\r\n-// });\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n \r\n-// export default function useFirebaseAuth() {\r\n-//     const [authUser, setAuthUser] = useState(null);\r\n-//     const [loading, setLoading] = useState(true);\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n\\ No newline at end of file\n+        return () => unsubscribe();\r\n+    }, []);\r\n \r\n-//     const authStateChanged = async (authState) => {\r\n-//         if (!authState) {\r\n-//             setAuthUser(null)\r\n-//             setLoading(false)\r\n-//             return;\r\n-//         }\r\n-\r\n-//         setLoading(true)\r\n-//         var formattedUser = formatAuthUser(authState);\r\n-//         setAuthUser(formattedUser);\r\n-//         setLoading(false);\r\n-//     };\r\n-\r\n-\r\n-//     const clear = () => {\r\n-//         setAuthUser(null);\r\n-//         setLoading(true);\r\n-//     };\r\n-\r\n-//     const signIn = async (email, password) =>\r\n-//         signInWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const createAccount = async (email, password) =>\r\n-//         createUserWithEmailAndPassword(auth, email, password);\r\n-\r\n-//     const signOut = async () =>\r\n-//         signOut().then(clear);\r\n-\r\n-//     useEffect(() => {\r\n-//         const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n-//         return () => unsubscribe();\r\n-//     }, []);\r\n-\r\n-//     return {\r\n-//         authUser,\r\n-//         loading,\r\n-//         signIn,\r\n-//         createAccount,\r\n-//         signOut\r\n-//     }\r\n-// }\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262050011,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,15 +35,15 @@\n         setAuthUser(null);\r\n         setLoading(true);\r\n     };\r\n \r\n-    const signIn = async (email: string, password) =>\r\n+    const signIn = async (email: string, password) =>{\r\n     try {\r\n         await auth.signInWithEmailAndPassword(email, password);\r\n       } catch (err) {\r\n         console.error(err);\r\n         alert(err.message);\r\n-      }\r\n+      }}\r\n     const createAccount = async (email: string, password) =>\r\n         createUserWithEmailAndPassword(auth, email, password);\r\n \r\n     const signOut = () =>\r\n"
                },
                {
                    "date": 1630262069955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     };\r\n \r\n     const signIn = async (email: string, password) =>{\r\n     try {\r\n-        await auth.signInWithEmailAndPassword(email, password);\r\n+        await signInWithEmailAndPassword(email, password);\r\n       } catch (err) {\r\n         console.error(err);\r\n         alert(err.message);\r\n       }}\r\n"
                },
                {
                    "date": 1630262095880,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await auth.signInWithEmailAndPassword(email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }}\r\n+    const createAccount = async (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262102968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await .signInWithEmailAndPassword(authemail, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }}\r\n+    const createAccount = async (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262112676,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>\r\n+        createUserWithEmailAndPassword(auth, email, password);\r\n+\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262168013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,76 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>\r\n+    try {\r\n+        const res = await auth.createUserWithEmailAndPassword(email, password);\r\n+        const user = res.user;\r\n+        await db.collection(\"users\").add({\r\n+          uid: user.uid,\r\n+          name,\r\n+          authProvider: \"local\",\r\n+          email,\r\n+        });\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262175009,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await auth.createUserWithEmailAndPassword(email, password);\r\n+        const user = res.user;\r\n+        await db.collection(\"users\").add({\r\n+          uid: user.uid,\r\n+          name,\r\n+          authProvider: \"local\",\r\n+          email,\r\n+        });\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262184191,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,77 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await .createUserWithEmailAndPassword(authemail, password);\r\n+        const user = res.user;\r\n+        await db.collection(\"users\").add({\r\n+          uid: user.uid,\r\n+          name,\r\n+          authProvider: \"local\",\r\n+          email,\r\n+        });\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262216655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,71 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262248121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,73 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        \r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262257330,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const sendPasswordResetEmail = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262269889,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const resetPasso = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262276355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,81 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262292593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,82 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(auth' email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n+\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged);\r\n+        return () => unsubscribe();\r\n+    }, []);\r\n+\r\n+    return {\r\n+        authUser,\r\n+        loading,\r\n+        signIn,\r\n+        createAccount,\r\n+        signOut\r\n+    }\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1630262346644,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,68 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+const formatAuthUser = (user) => ({\r\n+    uid: user.uid,\r\n+    email: user.email\r\n+});\r\n+\r\n+export default function useFirebaseAuth() {\r\n+    const [authUser, setAuthUser] = useState(null);\r\n+    const [loading, setLoading] = useState(true);\r\n+\r\n+    const authStateChanged = async (authState) => {\r\n+        if (!authState) {\r\n+            setAuthUser(null)\r\n+            setLoading(false)\r\n+            return;\r\n+        }\r\n+\r\n+        setLoading(true)\r\n+        var formattedUser = formatAuthUser(authState);\r\n+        setAuthUser(formattedUser);\r\n+        setLoading(false);\r\n+    };\r\n+\r\n+    // listen for Firebase state change\r\n+    useEffect(() => {\r\n+        const unsubscribe = auth.onAuthStateChanged(authStateChanged)\r\n+\r\n+        return () => unsubscribe()\r\n+    }, []);\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(auth, email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n"
                },
                {
                    "date": 1630262362643,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,40 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { useEffect, useState } from \"react\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+    const clear = () => {\r\n+        setAuthUser(null);\r\n+        setLoading(true);\r\n+    };\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(auth, email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n"
                },
                {
                    "date": 1630262371650,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+    const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(auth, email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n"
                },
                {
                    "date": 1630262380831,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+    export const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(auth, email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n"
                },
                {
                    "date": 1630262387435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+    export const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    export const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+    const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(auth, email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n"
                },
                {
                    "date": 1630262398772,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+    export const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    export const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+      export const signOut = () =>\r\n+        signOut().then(clear);\r\n+\r\n+        export const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(auth, email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n"
                },
                {
                    "date": 1630262423927,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,34 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+    export const signIn = async (email: string, password) =>{\r\n+    try {\r\n+        await signInWithEmailAndPassword(auth, email, password);\r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+    }\r\n+    export const createAccount = async (email: string, password) =>{\r\n+    try {\r\n+        const res = await createUserWithEmailAndPassword(auth, email, password);\r\n+        \r\n+      } catch (err) {\r\n+        console.error(err);\r\n+        alert(err.message);\r\n+      }\r\n+      }\r\n+      export const signOut = () =>\r\n+        signOut()\r\n+\r\n+        export const resetPassword = async (email) => {\r\n+            try {\r\n+              await sendPasswordResetEmail(auth, email);\r\n+              alert(\"Password reset link sent!\");\r\n+            } catch (err) {\r\n+              console.error(err);\r\n+              alert(err.message);\r\n+            }\r\n+          }\r\n"
                },
                {
                    "date": 1630272673823,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,6 @@\n+import { createUserWithEmailAndPassword, signInWithEmailAndPassword } from \"@firebase/auth\";\r\n+import { sendPasswordResetEmail } from \"firebase/auth\";\r\n+import { auth } from \"./initialiseFirebase\";\r\n+\r\n+\r\n+\r\n"
                }
            ],
            "date": 1630172188850,
            "name": "Commit-0",
            "content": "const formatAuthUser = (user) => ({\r\n    uid: user.uid,\r\n    email: user.email\r\n  });\r\n  \r\n  export default function useFirebaseAuth() {\r\n    const [authUser, setAuthUser] = useState(null);\r\n    const [loading, setLoading] = useState(true);\r\n  \r\n    const authStateChanged = async (authState) => {\r\n      if (!authState) {\r\n        setAuthUser(null)\r\n        setLoading(false)\r\n        return;\r\n      }\r\n  \r\n      setLoading(true)\r\n      var formattedUser = formatAuthUser(authState);\r\n      setAuthUser(formattedUser);    \r\n      setLoading(false);\r\n    };\r\n  \r\n  // listen for Firebase state change\r\n    useEffect(() => {\r\n      const unsubscribe = Firebase.auth().onAuthStateChanged(authStateChanged);\r\n      return () => unsubscribe();\r\n    }, []);\r\n  \r\n    return {\r\n      authUser,\r\n      loading\r\n    };\r\n  }"
        }
    ]
}