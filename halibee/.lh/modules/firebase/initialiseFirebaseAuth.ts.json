{
    "sourceFile": "modules/firebase/initialiseFirebaseAuth.ts",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 16,
            "patches": [
                {
                    "date": 1631125791414,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1631125902782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n       databaseURL: 'https://my-example-app.firebaseio.com',\r\n       projectId: 'my-example-app-id',\r\n     },\r\n     cookies: {\r\n-      name: 'ExampleApp', // required\r\n+      name: 'HaLiBee', // required\r\n       // Keys are required unless you set `signed` to `false`.\r\n       // The keys cannot be accessible on the client side.\r\n       keys: [\r\n         process.env.COOKIE_SECRET_CURRENT,\r\n"
                },
                {
                    "date": 1631126157378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -9,9 +9,9 @@\n     firebaseAuthEmulatorHost: 'localhost:9099',\r\n     // Required in most cases.\r\n     firebaseAdminInitConfig: {\r\n       credential: {\r\n-        projectId: 'my-example-app-id',\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n         clientEmail: 'example-abc123@my-example-app.iam.gserviceaccount.com',\r\n         // The private key must not be accesssible on the client side.\r\n         privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n       },\r\n"
                },
                {
                    "date": 1631126261520,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/auth',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    // Required in most cases.\r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: 'https://my-example-app.firebaseio.com',\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: 'MyExampleAppAPIKey123', // required\r\n+      authDomain: 'my-example-app.firebaseapp.com',\r\n+      databaseURL: 'https://my-example-app.firebaseio.com',\r\n+      projectId: 'my-example-app-id',\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126286621,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/auth',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    // Required in most cases.\r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: 'MyExampleAppAPIKey123', // required\r\n+      authDomain: 'my-example-app.firebaseapp.com',\r\n+      databaseURL: 'https://my-example-app.firebaseio.com',\r\n+      projectId: 'my-example-app-id',\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126304796,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/auth',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    // Required in most cases.\r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, // required\r\n+      authDomain: 'my-example-app.firebaseapp.com',\r\n+      databaseURL: 'https://my-example-app.firebaseio.com',\r\n+      projectId: 'my-example-app-id',\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126311069,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/auth',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    // Required in most cases.\r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: 'my-example-app.firebaseapp.com',\r\n+      databaseURL: 'https://my-example-app.firebaseio.com',\r\n+      projectId: 'my-example-app-id',\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126326749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/auth',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    // Required in most cases.\r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: 'https://my-example-app.firebaseio.com',\r\n+      projectId: 'my-example-app-id',\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126340756,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/auth',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    // Required in most cases.\r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: 'my-example-app-id',\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126353845,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/auth',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    // Required in most cases.\r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: process.env.FIREBASE_APP_ID,\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126369433,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,43 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/authentic',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    // Required in most cases.\r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: process.env.FIREBASE_APP_ID,\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126399128,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,44 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/authentication',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    \r\n+    \r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        // The private key must not be accesssible on the client side.\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: process.env.FIREBASE_APP_ID,\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631126406564,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/authentication',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    \r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.EMAIL,\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: process.env.FIREBASE_APP_ID,\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631128319045,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/authentication',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    \r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: process.env.FIREBASE_APP_ID,\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631128585965,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/authentication',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    \r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: process.env.FIREBASE_APP_ID,\r\n+    },\r\n+    // cookies: {\r\n+    //   name: 'HaLiBee', // required\r\n+    //   // Keys are required unless you set `signed` to `false`.\r\n+    //   // The keys cannot be accessible on the client side.\r\n+    //   keys: [\r\n+    //     process.env.COOKIE_SECRET_CURRENT,\r\n+    //     process.env.COOKIE_SECRET_PREVIOUS,\r\n+    //   ],\r\n+    //   httpOnly: true,\r\n+    //   maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+    //   overwrite: true,\r\n+    //   path: '/',\r\n+    //   sameSite: 'strict',\r\n+    //   secure: true, // set this to false in local (non-HTTPS) development\r\n+    //   signed: true,\r\n+    // },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631128600004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/authentication',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    \r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: process.env.FIREBASE_APP_ID,\r\n+    }\r\n+    // cookies: {\r\n+    //   name: 'HaLiBee', // required\r\n+    //   // Keys are required unless you set `signed` to `false`.\r\n+    //   // The keys cannot be accessible on the client side.\r\n+    //   keys: [\r\n+    //     process.env.COOKIE_SECRET_CURRENT,\r\n+    //     process.env.COOKIE_SECRET_PREVIOUS,\r\n+    //   ],\r\n+    //   httpOnly: true,\r\n+    //   maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+    //   overwrite: true,\r\n+    //   path: '/',\r\n+    //   sameSite: 'strict',\r\n+    //   secure: true, // set this to false in local (non-HTTPS) development\r\n+    //   signed: true,\r\n+    // },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                },
                {
                    "date": 1631128612760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,42 @@\n+import { init } from 'next-firebase-auth'\r\n+\r\n+export const initAuth = () => {\r\n+  init({\r\n+    authPageURL: '/authentication',\r\n+    appPageURL: '/',\r\n+    loginAPIEndpoint: '/api/login', // required\r\n+    logoutAPIEndpoint: '/api/logout', // required\r\n+    firebaseAuthEmulatorHost: 'localhost:9099',\r\n+    \r\n+    firebaseAdminInitConfig: {\r\n+      credential: {\r\n+        projectId: process.env.FIREBASE_PROJECT_ID,\r\n+        clientEmail: process.env.FIREBASE_CLIENT_EMAIL,\r\n+        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n+      },\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+    },\r\n+    firebaseClientInitConfig: {\r\n+      apiKey: process.env.FIREBASE_API_KEY, \r\n+      authDomain: process.env.FIREBASE_AUTH_DOMATIN,\r\n+      databaseURL: process.env.FIREBASE_DATABASE_URL,\r\n+      projectId: process.env.FIREBASE_APP_ID,\r\n+    },\r\n+    cookies: {\r\n+      name: 'HaLiBee', // required\r\n+      // Keys are required unless you set `signed` to `false`.\r\n+      // The keys cannot be accessible on the client side.\r\n+      keys: [\r\n+        process.env.COOKIE_SECRET_CURRENT,\r\n+        process.env.COOKIE_SECRET_PREVIOUS,\r\n+      ],\r\n+      httpOnly: true,\r\n+      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n+      overwrite: true,\r\n+      path: '/',\r\n+      sameSite: 'strict',\r\n+      secure: true, // set this to false in local (non-HTTPS) development\r\n+      signed: true,\r\n+    },\r\n+  })\r\n+}\n\\ No newline at end of file\n"
                }
            ],
            "date": 1631125791414,
            "name": "Commit-0",
            "content": "import { init } from 'next-firebase-auth'\r\n\r\nexport const initAuth = () => {\r\n  init({\r\n    authPageURL: '/auth',\r\n    appPageURL: '/',\r\n    loginAPIEndpoint: '/api/login', // required\r\n    logoutAPIEndpoint: '/api/logout', // required\r\n    firebaseAuthEmulatorHost: 'localhost:9099',\r\n    // Required in most cases.\r\n    firebaseAdminInitConfig: {\r\n      credential: {\r\n        projectId: 'my-example-app-id',\r\n        clientEmail: 'example-abc123@my-example-app.iam.gserviceaccount.com',\r\n        // The private key must not be accesssible on the client side.\r\n        privateKey: process.env.FIREBASE_PRIVATE_KEY,\r\n      },\r\n      databaseURL: 'https://my-example-app.firebaseio.com',\r\n    },\r\n    firebaseClientInitConfig: {\r\n      apiKey: 'MyExampleAppAPIKey123', // required\r\n      authDomain: 'my-example-app.firebaseapp.com',\r\n      databaseURL: 'https://my-example-app.firebaseio.com',\r\n      projectId: 'my-example-app-id',\r\n    },\r\n    cookies: {\r\n      name: 'ExampleApp', // required\r\n      // Keys are required unless you set `signed` to `false`.\r\n      // The keys cannot be accessible on the client side.\r\n      keys: [\r\n        process.env.COOKIE_SECRET_CURRENT,\r\n        process.env.COOKIE_SECRET_PREVIOUS,\r\n      ],\r\n      httpOnly: true,\r\n      maxAge: 12 * 60 * 60 * 24 * 1000, // twelve days\r\n      overwrite: true,\r\n      path: '/',\r\n      sameSite: 'strict',\r\n      secure: true, // set this to false in local (non-HTTPS) development\r\n      signed: true,\r\n    },\r\n  })\r\n}"
        }
    ]
}